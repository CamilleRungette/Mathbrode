{"ast":null,"code":"var _jsxFileName = \"/home/lea/Desktop/mon-app/src/components/LoginAdmin.js\";\nimport React, { useState } from 'react';\nimport { Card, Button, Col, Row, Table, Form } from 'react-bootstrap';\nimport '../App.css';\nimport Navbar from './dashboardComponents/NavbarAdmin';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport ip from './ip';\n\nclass LoginAdmin extends React.Component {\n  constructor() {\n    super();\n    this.handleSubmitSignIn = this.handleSubmitSignIn.bind(this);\n    this.state = {\n      SignInEmail: '',\n      SignInPassword: '',\n      isAdminExist: false\n    };\n  }\n\n  handleSubmitSignIn() {\n    let ctx = this;\n    fetch(`${ip}/admins/sign-in`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: `email=${this.state.SignInEmail}&password=${this.state.SignInPassword}`\n    }).then(function (response, err) {\n      return response.json();\n    }).then(data => {\n      if (data.isAdminExists === true) {\n        console.log(\"c'est vrai\");\n        ctx.setState({\n          isAdminExist: true\n        });\n      }\n\n      ctx.props.onSiginClick(data.adminExists, this.state.isAdminExist);\n    });\n  }\n\n  render() {\n    if (this.state.isAdminExist === true || this.props.adminConnected == true) {\n      console.log(\"CONDITION:\", this.state.isAdminExist);\n      return React.createElement(Redirect, {\n        to: \"/dashboard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"container\",\n      style: {\n        marginTop: '5em',\n        fontFamily: \"Raleway\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Row, {\n      style: {\n        justifyContent: \"space-around\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 5,\n      md: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      style: {\n        marginBottom: \"2em\",\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Se connecter\"), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Form.Control, {\n      type: \"email\",\n      onChange: e => this.setState({\n        SignInEmail: e.target.value\n      }),\n      value: this.state.SignInEmail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"formBasicPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Mot de passe\"), React.createElement(Form.Control, {\n      type: \"password\",\n      onChange: e => this.setState({\n        SignInPassword: e.target.value\n      }),\n      value: this.state.SignInPassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }))), React.createElement(Button, {\n      style: {\n        backgroundColor: \"#1B263B\",\n        border: \"none\"\n      },\n      variant: \"secondary\",\n      onClick: this.handleSubmitSignIn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Se Connecter\")))));\n  }\n\n}\n\nfunction mapStatetoProps(state) {\n  console.log(\"======>\", state);\n  return {\n    adminConnected: state.admin.isAdminExist\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onSiginClick: function (data, isAdminExist) {\n      dispatch({\n        type: 'adminSignin',\n        adminSigned: data,\n        isAdminExist\n      });\n    }\n  };\n}\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(LoginAdmin);","map":{"version":3,"sources":["/home/lea/Desktop/mon-app/src/components/LoginAdmin.js"],"names":["React","useState","Card","Button","Col","Row","Table","Form","Navbar","Link","Redirect","connect","ip","LoginAdmin","Component","constructor","handleSubmitSignIn","bind","state","SignInEmail","SignInPassword","isAdminExist","ctx","fetch","method","headers","body","then","response","err","json","data","isAdminExists","console","log","setState","props","onSiginClick","adminExists","render","adminConnected","marginTop","fontFamily","justifyContent","marginBottom","textAlign","e","target","value","backgroundColor","border","mapStatetoProps","admin","mapDispatchToProps","dispatch","type","adminSigned"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {Card, Button,   Col, Row, Table, Form} from 'react-bootstrap';\nimport '../App.css';\nimport Navbar from './dashboardComponents/NavbarAdmin';\nimport {Link, Redirect } from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport ip from './ip'\n\n\nclass LoginAdmin extends React.Component{\n    constructor(){\nsuper();\nthis.handleSubmitSignIn = this.handleSubmitSignIn.bind(this)\nthis.state = {\n      SignInEmail:'',\n      SignInPassword:'',\n      isAdminExist: false,\n    }\n}\n\n\n    handleSubmitSignIn(){\n      let ctx = this;     \n    fetch(`${ip}/admins/sign-in`,{\n    method:\"POST\",\n    headers: {'Content-Type':'application/x-www-form-urlencoded'},\n    body: `email=${this.state.SignInEmail}&password=${this.state.SignInPassword}`\n    })\n    .then(function(response, err){\n      return response.json();\n    }).then(data=>{\n        if (data.isAdminExists === true ){\n          console.log(\"c'est vrai\")\n          ctx.setState({isAdminExist: true});\n        }\n      ctx.props.onSiginClick(data.adminExists, this.state.isAdminExist)\n    });\n  }\n\n      render(){\n        if (this.state.isAdminExist === true || this.props.adminConnected == true){\n          console.log(\"CONDITION:\", this.state.isAdminExist)\n          return < Redirect to=\"/dashboard\" />\n        }\n        \n        return(\n          <div>\n          <Navbar></Navbar>\n            <div class=\"container\" style={{marginTop:'5em', fontFamily:\"Raleway\"}}>\n            <Row style={{justifyContent:\"space-around\"}}>\n            <Col lg={5} md={8}>\n              <h3 style={{marginBottom:\"2em\", textAlign:'center'}}>Se connecter</h3>\n                <Form>\n                  <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control type=\"email\" onChange={(e)=> this.setState({SignInEmail: e.target.value})}\n                    value={this.state.SignInEmail} />\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Mot de passe</Form.Label>\n                    <Form.Control type=\"password\" onChange={(e)=> this.setState({SignInPassword: e.target.value})} \n                    value={this.state.SignInPassword} />\n                  </Form.Group>\n                </Form>\n                  <Button style={{backgroundColor:\"#1B263B\", border:\"none\"}} variant=\"secondary\" onClick={this.handleSubmitSignIn}>\n                    Se Connecter\n                  </Button>\n            </Col>\n\n            </Row>\n            </div>\n          </div>\n        )}\n}\n\nfunction mapStatetoProps(state){\n  console.log(\"======>\", state)\n  return {adminConnected: state.admin.isAdminExist}\n}\n\n\nfunction mapDispatchToProps(dispatch){\n  return{\n    onSiginClick: function(data, isAdminExist){\n      dispatch({type: 'adminSignin', adminSigned: data, isAdminExist })\n    }\n  }\n}\n\nexport default connect (\n  mapStatetoProps,\n  mapDispatchToProps\n)(LoginAdmin)"]},"metadata":{},"sourceType":"module"}